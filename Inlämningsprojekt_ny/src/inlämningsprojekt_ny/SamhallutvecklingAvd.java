package inlämningsprojekt_ny;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import oru.inf.InfDB;

/**
 *
 * @author joelj
 */
public class SamhallutvecklingAvd extends javax.swing.JFrame {
    
    private InfDB idb;
    private String InloggadAnvandare;
    private int aid;

    /**
     * Creates new form SamhallutvecklingAvd
     */
    public SamhallutvecklingAvd(InfDB idb, String InloggadAnvandare, int aid) {
        this.idb = idb;
        this.InloggadAnvandare = InloggadAnvandare;
        this.aid = aid;
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        samhallutvAvdTillbakaButton = new javax.swing.JButton();
        samhallutvecklingAvdPersonalButton = new javax.swing.JButton();
        samhallutvecklingAvdProjektButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        samhallutvecklingAvdProjektField = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        samhallutvecklingAvdPersonalField = new javax.swing.JTextArea();
        plaAvdSamhallutvecklingButton = new javax.swing.JToggleButton();
        pAvdSamhallutvecklingButton = new javax.swing.JToggleButton();
        aAvdSamhallutvecklingButton = new javax.swing.JToggleButton();
        sokHandlaggarSamField = new javax.swing.JTextField();
        sokHandlaggareSamButton = new javax.swing.JButton();
        sokProjektSamLabel = new javax.swing.JLabel();
        sokProjektSamLabel2 = new javax.swing.JLabel();
        sokProjektSamField = new javax.swing.JTextField();
        sokProjektSamField2 = new javax.swing.JTextField();
        sokProjektSamDatumButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        samhallutvAvdTillbakaButton.setText("Tillbaka");
        samhallutvAvdTillbakaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                samhallutvAvdTillbakaButtonActionPerformed(evt);
            }
        });

        samhallutvecklingAvdPersonalButton.setText("Personal Lista");
        samhallutvecklingAvdPersonalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                samhallutvecklingAvdPersonalButtonActionPerformed(evt);
            }
        });

        samhallutvecklingAvdProjektButton.setText("Projekt Lista");
        samhallutvecklingAvdProjektButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                samhallutvecklingAvdProjektButtonActionPerformed(evt);
            }
        });

        samhallutvecklingAvdProjektField.setColumns(20);
        samhallutvecklingAvdProjektField.setRows(5);
        jScrollPane1.setViewportView(samhallutvecklingAvdProjektField);

        samhallutvecklingAvdPersonalField.setColumns(20);
        samhallutvecklingAvdPersonalField.setRows(5);
        jScrollPane2.setViewportView(samhallutvecklingAvdPersonalField);

        buttonGroup1.add(plaAvdSamhallutvecklingButton);
        plaAvdSamhallutvecklingButton.setText("Planerat");
        plaAvdSamhallutvecklingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plaAvdSamhallutvecklingButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(pAvdSamhallutvecklingButton);
        pAvdSamhallutvecklingButton.setText("Pågående");
        pAvdSamhallutvecklingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pAvdSamhallutvecklingButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(aAvdSamhallutvecklingButton);
        aAvdSamhallutvecklingButton.setText("Avslutat");
        aAvdSamhallutvecklingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aAvdSamhallutvecklingButtonActionPerformed(evt);
            }
        });

        sokHandlaggarSamField.setColumns(12);
        sokHandlaggarSamField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sokHandlaggarSamFieldActionPerformed(evt);
            }
        });

        sokHandlaggareSamButton.setText("Sök Handläggare");
        sokHandlaggareSamButton.setActionCommand("Sök handläggare");
        sokHandlaggareSamButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sokHandlaggareSamButtonActionPerformed(evt);
            }
        });

        sokProjektSamLabel.setText("Från:");

        sokProjektSamLabel2.setText("Till:");

        sokProjektSamField.setColumns(1);
        sokProjektSamField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sokProjektSamFieldActionPerformed(evt);
            }
        });

        sokProjektSamField2.setColumns(1);
        sokProjektSamField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sokProjektSamField2ActionPerformed(evt);
            }
        });

        sokProjektSamDatumButton.setText("Sök Projekt");
        sokProjektSamDatumButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sokProjektSamDatumButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(samhallutvecklingAvdPersonalButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 157, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(samhallutvecklingAvdProjektButton)
                        .addGap(60, 60, 60))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sokProjektSamLabel)
                            .addComponent(sokProjektSamLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(sokProjektSamField2, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                            .addComponent(sokProjektSamField))
                        .addGap(18, 18, 18)
                        .addComponent(sokProjektSamDatumButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(samhallutvAvdTillbakaButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(plaAvdSamhallutvecklingButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pAvdSamhallutvecklingButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(aAvdSamhallutvecklingButton)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(sokHandlaggarSamField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sokHandlaggareSamButton)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 58, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sokProjektSamLabel)
                            .addComponent(sokProjektSamField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sokProjektSamLabel2)
                            .addComponent(sokProjektSamField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(samhallutvAvdTillbakaButton)
                            .addComponent(plaAvdSamhallutvecklingButton)
                            .addComponent(pAvdSamhallutvecklingButton)
                            .addComponent(aAvdSamhallutvecklingButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(sokHandlaggarSamField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(sokHandlaggareSamButton))
                                .addGap(12, 12, 12))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(sokProjektSamDatumButton)
                                .addGap(32, 32, 32)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(samhallutvecklingAvdProjektButton)
                    .addComponent(samhallutvecklingAvdPersonalButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void samhallutvAvdTillbakaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_samhallutvAvdTillbakaButtonActionPerformed
        // TODO add your handling code here:
        new Avdelning(idb, InloggadAnvandare, aid).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_samhallutvAvdTillbakaButtonActionPerformed

    private void samhallutvecklingAvdPersonalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_samhallutvecklingAvdPersonalButtonActionPerformed
        // TODO add your handling code here:
                try {
    String sql = "SELECT fornamn, efternamn FROM anstalld " + 
                 "JOIN avdelning ON anstalld.avdelning = avdelning.avdid " + 
                 "WHERE avdelning.namn = 'Avdelning för Samhällsutveckling och Utbildning'";

    var resultat = idb.fetchRows(sql);

    if (resultat != null && !resultat.isEmpty()) {
        StringBuilder sb = new StringBuilder();
        for (var rad : resultat) {
            sb.append(rad.get("fornamn")).append(" ").append(rad.get("efternamn")).append("\n");
        }
        samhallutvecklingAvdPersonalField.setText(sb.toString());
        jScrollPane1.setVisible(true);
        jScrollPane1.revalidate();
        jScrollPane1.repaint();
    } else {
        samhallutvecklingAvdPersonalField.setText("Inga personer hittades.");
        jScrollPane1.setVisible(true);
        jScrollPane1.revalidate();
        jScrollPane1.repaint();
    }
} catch (Exception e) {
    samhallutvecklingAvdPersonalField.setText("Fel: " + e.getMessage());
    jScrollPane1.setVisible(true);
    jScrollPane1.revalidate();
    jScrollPane1.repaint();
}
    }//GEN-LAST:event_samhallutvecklingAvdPersonalButtonActionPerformed

    private void samhallutvecklingAvdProjektButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_samhallutvecklingAvdProjektButtonActionPerformed
        // TODO add your handling code here:
                try {
            String sql = "SELECT DISTINCT p.projektnamn FROM projekt p " + 
                    "JOIN proj_hallbarhet ph ON p.pid = ph.pid " + 
                    "JOIN avd_hallbarhet ah ON ph.hid = ah.hid " + 
                    "JOIN avdelning a ON ah.avdid = a.avdid " +
                    "WHERE a.namn = 'Avdelning för Samhällsutveckling och Utbildning'";
            
            var resultat = idb.fetchRows(sql);
            
            if (resultat != null && !resultat.isEmpty()) {
                StringBuilder sb = new StringBuilder();
                for (var rad : resultat) {
                    sb.append(rad.get("projektnamn")).append("\n");
                }
                samhallutvecklingAvdProjektField.setText(sb.toString());
                jScrollPane2.setVisible(true);
            } else {
                samhallutvecklingAvdProjektField.setText("Inga projekt hittades.");
                jScrollPane2.setVisible(true);
            }
      } catch (Exception e) {
          samhallutvecklingAvdProjektField.setText("Fel: " + e.getMessage());
          jScrollPane2.setVisible(true);
      }
    }//GEN-LAST:event_samhallutvecklingAvdProjektButtonActionPerformed

    private void plaAvdSamhallutvecklingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plaAvdSamhallutvecklingButtonActionPerformed
        // TODO add your handling code here:
                                                String status = "Planerat";
        
        if(Validering.kollaStatus(status)){
            try{
                String sql = "SELECT DISTINCT p.projektnamn FROM projekt p " +
                        "JOIN proj_hallbarhet ph ON p.pid = ph.pid " +
                        "JOIN avd_hallbarhet ah ON ph.hid = ah.hid " +
                        "JOIN avdelning a ON ah.avdid = a.avdid " +
                        "WHERE a.namn = 'Avdelning för Samhällsutveckling och Utbildning' "+
                        "AND p.status = '" + status + "'";
                
               var resultat = idb.fetchRows(sql);
               StringBuilder sb = new StringBuilder();
               
               if(resultat != null && !resultat.isEmpty()){
                   for(var rad : resultat){
                       sb.append(rad.get("projektnamn")).append("\n");
                   }
                   samhallutvecklingAvdProjektField.setText(sb.toString());
               }else{
                   samhallutvecklingAvdProjektField.setText("Inga projekt med status '" + status + "' hittades.");
               }
            }catch (Exception e){
                samhallutvecklingAvdProjektField.setText("Fel: " + e.getMessage());
            }
        }else {
            samhallutvecklingAvdProjektField.setText("Ogiltig status: " + status);
        }   
    }//GEN-LAST:event_plaAvdSamhallutvecklingButtonActionPerformed

    private void pAvdSamhallutvecklingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pAvdSamhallutvecklingButtonActionPerformed
        // TODO add your handling code here:
                                        String status = "Pågående";
        
        if(Validering.kollaStatus(status)){
            try{
                String sql = "SELECT DISTINCT p.projektnamn FROM projekt p " +
                        "JOIN proj_hallbarhet ph ON p.pid = ph.pid " +
                        "JOIN avd_hallbarhet ah ON ph.hid = ah.hid " +
                        "JOIN avdelning a ON ah.avdid = a.avdid " +
                        "WHERE a.namn = 'Avdelning för Samhällsutveckling och Utbildning' "+
                        "AND p.status = '" + status + "'";
                
               var resultat = idb.fetchRows(sql);
               StringBuilder sb = new StringBuilder();
               
               if(resultat != null && !resultat.isEmpty()){
                   for(var rad : resultat){
                       sb.append(rad.get("projektnamn")).append("\n");
                   }
                   samhallutvecklingAvdProjektField.setText(sb.toString());
               }else{
                   samhallutvecklingAvdProjektField.setText("Inga projekt med status '" + status + "' hittades.");
               }
            }catch (Exception e){
                samhallutvecklingAvdProjektField.setText("Fel: " + e.getMessage());
            }
        }else {
            samhallutvecklingAvdProjektField.setText("Ogiltig status: " + status);
        }   
    }//GEN-LAST:event_pAvdSamhallutvecklingButtonActionPerformed

    private void aAvdSamhallutvecklingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aAvdSamhallutvecklingButtonActionPerformed
        // TODO add your handling code here:
                                                String status = "Avslutat";
        
        if(Validering.kollaStatus(status)){
            try{
                String sql = "SELECT DISTINCT p.projektnamn FROM projekt p " +
                        "JOIN proj_hallbarhet ph ON p.pid = ph.pid " +
                        "JOIN avd_hallbarhet ah ON ph.hid = ah.hid " +
                        "JOIN avdelning a ON ah.avdid = a.avdid " +
                        "WHERE a.namn = 'Avdelning för Samhällsutveckling och Utbildning' "+
                        "AND p.status = '" + status + "'";
                
               var resultat = idb.fetchRows(sql);
               StringBuilder sb = new StringBuilder();
               
               if(resultat != null && !resultat.isEmpty()){
                   for(var rad : resultat){
                       sb.append(rad.get("projektnamn")).append("\n");
                   }
                   samhallutvecklingAvdProjektField.setText(sb.toString());
               }else{
                   samhallutvecklingAvdProjektField.setText("Inga projekt med status '" + status + "' hittades.");
               }
            }catch (Exception e){
                samhallutvecklingAvdProjektField.setText("Fel: " + e.getMessage());
            }
        }else {
            samhallutvecklingAvdProjektField.setText("Ogiltig status: " + status);
        }   
    }//GEN-LAST:event_aAvdSamhallutvecklingButtonActionPerformed

    private void sokProjektSamFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sokProjektSamFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sokProjektSamFieldActionPerformed

    private void sokProjektSamField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sokProjektSamField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sokProjektSamField2ActionPerformed
 /**
 * Söker och visar alla pågående projekt i avdelningen "Avdelning för Samhällsutveckling och Utbildning"
 * som överlappar ett angivet datumintervall (YYYY-MM-DD).
 * Visar projektnamn, start-/slutdatum och beskrivning i ett textfält.
 * Vid felaktigt datumformat eller databasfel visas ett felmeddelande.
 */
    private void sokProjektSamDatumButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sokProjektSamDatumButtonActionPerformed
        // TODO add your handling code here:
        String franDatum = sokProjektSamField.getText().trim();
    String tillDatum = sokProjektSamField2.getText().trim();

    if (franDatum.isEmpty() || tillDatum.isEmpty()) {
        samhallutvecklingAvdProjektField.setText("Ange både från- och till-datum.");
        return;
    }

    try {
        java.sql.Date franDate = java.sql.Date.valueOf(franDatum);
        java.sql.Date tillDate = java.sql.Date.valueOf(tillDatum);

        String sql = "SELECT DISTINCT p.projektnamn, p.startdatum, p.slutdatum, p.beskrivning " +
                     "FROM projekt p " +
                     "JOIN proj_hallbarhet ph ON p.pid = ph.pid " +
                     "JOIN avd_hallbarhet ah ON ph.hid = ah.hid " +
                     "JOIN avdelning a ON ah.avdid = a.avdid " +
                     "WHERE a.namn = 'Avdelning för Samhällsutveckling och Utbildning' " +
                     "AND p.status = 'Pågående' " +
                     "AND p.startdatum <= '" + tillDatum + "' " +
                     "AND p.slutdatum >= '" + franDatum + "'";

        System.out.println("SQL-fråga: " + sql);

        var resultat = idb.fetchRows(sql);

        if (resultat != null && !resultat.isEmpty()) {
            StringBuilder sb = new StringBuilder();
            for (var rad : resultat) {
                sb.append("Projektnamn: ").append(rad.get("projektnamn")).append("\n")
                  .append("Startdatum: ").append(rad.get("startdatum")).append("\n")
                  .append("Slutdatum: ").append(rad.get("slutdatum")).append("\n")
                  .append("Beskrivning: ").append(rad.get("beskrivning")).append("\n")
                  .append("--------------------------\n");
            }
            samhallutvecklingAvdProjektField.setText(sb.toString());
        } else {
            samhallutvecklingAvdProjektField.setText("Inga aktiva projekt hittades mellan datumen.");
        }

    } catch (IllegalArgumentException e) {
        samhallutvecklingAvdProjektField.setText("Fel format på datum. Använd YYYY-MM-DD.");
    } catch (Exception e) {
        samhallutvecklingAvdProjektField.setText("Fel vid sökning: " + e.getMessage());
    }
    }//GEN-LAST:event_sokProjektSamDatumButtonActionPerformed

    private void sokHandlaggarSamFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sokHandlaggarSamFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sokHandlaggarSamFieldActionPerformed

    private void sokHandlaggareSamButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sokHandlaggareSamButtonActionPerformed
        // TODO add your handling code here:
        String sokterm = sokHandlaggarSamField.getText().trim();

    if (sokterm.isEmpty()) {
        samhallutvecklingAvdPersonalField.setText("Ange namn eller e-post att söka efter.");
        return;
    }

    try {
        
        String avdidSql = "SELECT avdelning FROM anstalld WHERE aid = " + aid;
        String avdid = idb.fetchSingle(avdidSql);

       
       String sql = "SELECT a.fornamn, a.efternamn, a.epost, a.telefon, a.adress " +
                     "FROM anstalld a " +
                     "JOIN handlaggare h ON a.aid = h.aid " +
                     "JOIN avdelning av ON a.avdelning = av.avdid " +
                     "WHERE av.namn = 'Avdelning för Samhällsutveckling och Utbildning' " +
                     "AND (a.fornamn LIKE '%" + sokterm + "%' " +
                     "OR a.efternamn LIKE '%" + sokterm + "%' " +
                     "OR a.epost LIKE '%" + sokterm + "%')";

        var resultat = idb.fetchRows(sql);

        if (resultat != null && !resultat.isEmpty()) {
            StringBuilder sb = new StringBuilder();
            for (var rad : resultat) {
                sb.append("Namn: ").append(rad.get("fornamn")).append(" ").append(rad.get("efternamn")).append("\n")
                  .append("E-post: ").append(rad.get("epost")).append("\n")
                  .append("Telefon: ").append(rad.get("telefon")).append("\n")
                  .append("Adress: ").append(rad.get("adress")).append("\n")
                  .append("--------------------------\n");
                
            }
            samhallutvecklingAvdPersonalField.setText(sb.toString());
        } else {
            samhallutvecklingAvdPersonalField.setText("Ingen handläggare hittades med termen: " + sokterm);
        }

    } catch (Exception e) {
        samhallutvecklingAvdPersonalField.setText("Fel vid sökning: " + e.getMessage());
    }                                   
    }//GEN-LAST:event_sokHandlaggareSamButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SamhallutvecklingAvd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SamhallutvecklingAvd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SamhallutvecklingAvd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SamhallutvecklingAvd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new SamhallutvecklingAvd().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton aAvdSamhallutvecklingButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToggleButton pAvdSamhallutvecklingButton;
    private javax.swing.JToggleButton plaAvdSamhallutvecklingButton;
    private javax.swing.JButton samhallutvAvdTillbakaButton;
    private javax.swing.JButton samhallutvecklingAvdPersonalButton;
    private javax.swing.JTextArea samhallutvecklingAvdPersonalField;
    private javax.swing.JButton samhallutvecklingAvdProjektButton;
    private javax.swing.JTextArea samhallutvecklingAvdProjektField;
    private javax.swing.JTextField sokHandlaggarSamField;
    private javax.swing.JButton sokHandlaggareSamButton;
    private javax.swing.JButton sokProjektSamDatumButton;
    private javax.swing.JTextField sokProjektSamField;
    private javax.swing.JTextField sokProjektSamField2;
    private javax.swing.JLabel sokProjektSamLabel;
    private javax.swing.JLabel sokProjektSamLabel2;
    // End of variables declaration//GEN-END:variables
}
