package inlämningsprojekt_ny;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;
import javax.swing.JTextField;

/**
 *
 * @author joelj
 */
public class Validering extends javax.swing.JFrame {

    /**
     * Validerar om en e-postadress är korrekt formaterad.
     * Regexen kontrollerar att det finns ett användarnamn, ett @-tecken,
     * och en domän med minst två bokstäver.
     */
    public static boolean arMailKorrekt(String epost) {
        String valideraEpost = "^[a-zA-Z0-9._+%-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"; 
        return epost != null && epost.matches(valideraEpost);
    }
    /**
     * Kontrollerar att ett lösenord uppfyller grundläggande krav:
     * - Endast bokstäver och siffror
     * - Minst 11 tecken långt, max 99 tecken
     */
    public static boolean losenordKrav(String losen) {
        String losenRegex = "^[a-zA-Z0-9]{11,99}$"; 
        return losen != null && losen.matches(losenRegex);
    }
    /**
     * Kontrollerar att ett datum är i formatet YYYY-MM-DD
     * (år-månad-dag) där månader är 01-12 och dagar 01-31.
     */
    public static boolean kollaDatum(String datum) {
        String kollaDatumRegex = "^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01])$"; 
        return datum != null && datum.matches(kollaDatumRegex);
    }
    /**
     * Kontrollerar att en textsträng inte är tom.
     * Används för att säkerställa att användaren har skrivit något.
     */
    public static boolean faltInteTomt(String input) {
        return input != null && !input.trim().isEmpty();
    }
    /**
     * Variant av ovanstående metod men för JTextField.
     * Returnerar true om textfältet inte är tomt.
     */
    public static boolean faltInteTomtField(JTextField f) {
    return f.getText() != null && !f.getText().trim().isEmpty();
}
    /**
     * Kontrollerar om ett användarnamn (e-post) och lösenord matchar en post i databasen.
     * Returnerar true om kombinationen finns i tabellen `anstalld`.
     */
    public static boolean arAnvandarnamnOchLosenordKorrekt(String epost, String losen, InfDB idb) {
        try {
            String fraga = "SELECT epost FROM anstalld WHERE epost = '" + epost + "' AND losenord = '" + losen + "';";
            String resultat = idb.fetchSingle(fraga);
            return resultat != null;
            
        } catch (InfException e) {
            JOptionPane.showMessageDialog(null, "Vänligen försök senare");
            return false;
        }
    }
    /**
     * Validerar prioritet för ett projekt.
     * Tillåter endast strängarna "låg" eller "Hög" som giltiga värden.
     */
    public static boolean kollaPrioritet(String prioritet) {
        String kollaPrioritetRegex = "^(låg|Hög)$";
        return prioritet != null && prioritet.matches(kollaPrioritetRegex);
    }
    /**
     * Validerar status för ett projekt.
     * Tillåter endast "Planerat", "Pågående" eller "Avslutat".
     */
    public static boolean kollaStatus(String status) {
        String kollaStatusRegex = "^(Planerat|Pågående|Avslutat)$";
        return status != null && status.matches(kollaStatusRegex);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Validering.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Validering.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Validering.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Validering.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                //new Validering().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
