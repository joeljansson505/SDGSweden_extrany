package inlämningsprojekt_ny;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.util.HashSet;
import java.util.Set;
import oru.inf.InfDB;
import oru.inf.InfException;
/**
 *
 * @author ludvigkaiser
 */
public class MinaProjekt extends javax.swing.JFrame {

    private InfDB idb;
    private String handläggarID;
    /**
     * Creates new form NewJFrame
     */
    public MinaProjekt(InfDB idb, String id) {
       this.idb = idb;
       this.handläggarID = id;
        initComponents();
        fyllProjektTabell();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        etikettRubrikLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabellProjektTabel = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        stängFönsterButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        etikettRubrikLabel.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 18)); // NOI18N
        etikettRubrikLabel.setText("Mina tilldelade projekt");

        tabellProjektTabel.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 13)); // NOI18N
        tabellProjektTabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Projekt", "Startdatum", "Slutdatum", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tabellProjektTabel.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabellProjektTabel);

        stängFönsterButton.setBackground(new java.awt.Color(255, 102, 102));
        stängFönsterButton.setText("Stäng");
        stängFönsterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stängFönsterButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(stängFönsterButton))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(241, 241, 241)
                        .addComponent(etikettRubrikLabel)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(stängFönsterButton)
                .addGap(5, 5, 5)
                .addComponent(etikettRubrikLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void stängFönsterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stängFönsterButtonActionPerformed
       this.dispose();
    }//GEN-LAST:event_stängFönsterButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
    try {
        // Skapa databasanslutning (byt ut sökväg om det behövs)
        InfDB idb = new InfDB("SDGSweden.fdb"); // Du måste ha denna fil i rätt mapp

        // Ange ett handläggar-ID som finns i databasen, t.ex. 1
        String handläggarID = "1";

        // Starta fönstret i UI-tråden
        java.awt.EventQueue.invokeLater(() -> {
            new MinaProjekt(idb, handläggarID).setVisible(true);
        });

    } catch (InfException e) {
        System.out.println("Fel vid anslutning till databasen: " + e.getMessage());
    }
}

    private void fyllProjektTabell() {
    try {
        String sql = "SELECT projektnamn, startdatum, slutdatum, status FROM Projekt "
                   + "JOIN Handläggare_Projekt ON Projekt.id = Handläggare_Projekt.projekt_id "
                   + "WHERE Handläggare_Projekt.handläggare_id = '" + handläggarID + "';";

        var resultat = idb.fetchRows(sql);

        // Hämta modellen för tabellen
        var modell = (javax.swing.table.DefaultTableModel) tabellProjektTabel.getModel();
        modell.setRowCount(0); // töm tabellen

        for (var rad : resultat) {
            modell.addRow(new Object[] {
                rad.get("projektnamn"),
                rad.get("startdatum"),
                rad.get("slutdatum"),
                rad.get("status")
            });
        }

    } catch (InfException e) {
        javax.swing.JOptionPane.showMessageDialog(this, "Kunde inte hämta projekt: " + e.getMessage());
    }
}
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel etikettRubrikLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton stängFönsterButton;
    private javax.swing.JTable tabellProjektTabel;
    // End of variables declaration//GEN-END:variables
}
