package inlämningsprojekt_ny;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.util.HashSet;
import java.util.Set;
import oru.inf.InfDB;
import oru.inf.InfException;
/**
 *
 * @author ludvigkaiser
 */
public class MinaProjekt extends javax.swing.JFrame {

    private InfDB idb;
    private String inloggadAnvandare;
    private int aid;
    /**
     * Creates new form NewJFrame
     */
    public MinaProjekt(InfDB idb, String inloggadAnvandare, int aid) {
       this.idb = idb;
       this.inloggadAnvandare = inloggadAnvandare;
       this.aid = aid;
        initComponents();
        fyllProjektTabell();
        fyllPartnerTabell();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        etikettRubrikLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabellProjektTabel = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        stängFönsterButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        projektPartnerTabel = new javax.swing.JTable();
        lPartnerLabel = new javax.swing.JLabel();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        etikettRubrikLabel.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 18)); // NOI18N
        etikettRubrikLabel.setText("Mina tilldelade projekt");

        tabellProjektTabel.setFont(new java.awt.Font(".AppleSystemUIFont", 0, 13)); // NOI18N
        tabellProjektTabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "projekt", "startdatum", "slutdatum", "status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tabellProjektTabel.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabellProjektTabel);

        stängFönsterButton.setBackground(new java.awt.Color(204, 204, 204));
        stängFönsterButton.setText("Tillbaka");
        stängFönsterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stängFönsterButtonActionPerformed(evt);
            }
        });

        projektPartnerTabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "namn", "kontaktperson", "kontakt Epost", "telefon", "adress", "branch", "stad"
            }
        ));
        jScrollPane4.setViewportView(projektPartnerTabel);

        lPartnerLabel.setFont(new java.awt.Font(".AppleSystemUIFont", 1, 18)); // NOI18N
        lPartnerLabel.setText("Partner");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(384, 384, 384)
                .addComponent(lPartnerLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(stängFönsterButton)
                        .addGap(233, 233, 233)
                        .addComponent(etikettRubrikLabel)
                        .addGap(97, 225, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4)
                            .addComponent(jScrollPane1))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(etikettRubrikLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(stängFönsterButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(lPartnerLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(90, 90, 90))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void stängFönsterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stängFönsterButtonActionPerformed
       new Meny(idb, inloggadAnvandare, aid).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_stängFönsterButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
    try {
        // Skapa databasanslutning (byt ut sökväg om det behövs)
        InfDB idb = new InfDB("SDGSweden.fdb"); // Du måste ha denna fil i rätt mapp

        // Ange ett handläggar-ID som finns i databasen, t.ex. 1
        String inloggadAnvandare = "1";

        // Starta fönstret i UI-tråden
        java.awt.EventQueue.invokeLater(() -> {
            //new MinaProjekt(idb, handläggarID).setVisible(true);
        });

    } catch (InfException e) {
        System.out.println("Fel vid anslutning till databasen: " + e.getMessage());
    }
}

private void fyllProjektTabell() {
    try {
        String pid;
        pid = idb.fetchSingle("Select pid from ans_proj where aid = "+ aid +";");
        
        String sql = "SELECT projektnamn, startdatum, slutdatum, status FROM Projekt where pid = " + pid + ";";
        

        var resultat = idb.fetchRows(sql);

        var modell = (javax.swing.table.DefaultTableModel) tabellProjektTabel.getModel();
        modell.setRowCount(0); // töm tabellen

        for (var rad : resultat) {
            modell.addRow(new Object[] {
                rad.get("projektnamn"),
                rad.get("startdatum"),
                rad.get("slutdatum"),
                rad.get("status")
            });
        }

        if (resultat.isEmpty()) {
            System.out.println("Inga projekt hittades för handläggare med ID: " + aid);
        }

    } catch (InfException e) {
        javax.swing.JOptionPane.showMessageDialog(this, "Kunde inte hämta projekt: " + e.getMessage());
        e.printStackTrace();
    }
}
private void fyllPartnerTabell() {
    try {
        String sql = "SELECT partner.namn, partner.kontaktperson, partner.kontaktepost, partner.telefon, partner.adress, partner.branch, partner.stad " +
             "FROM partner " +
             "JOIN projekt_partner ON partner.pid = projekt_partner.partner_pid " +
             "WHERE projekt_partner.pid IN (SELECT pid FROM ans_proj WHERE aid = " + aid + ");";

        var resultat = idb.fetchRows(sql);

        // Hämta modellen från partner-tabellen
        var modell = (javax.swing.table.DefaultTableModel) projektPartnerTabel.getModel();
        modell.setRowCount(0); // Töm gamla rader

        // Lägg till varje partner som en ny rad
        for (var rad : resultat) {
            modell.addRow(new Object[] {
                rad.get("namn"),
                rad.get("kontaktperson"),
                rad.get("kontaktepost"),
                rad.get("telefon"),
                rad.get("adress"),
                rad.get("branch"),
                rad.get("stad")
            });
        }

        if (resultat.isEmpty()) {
            System.out.println("Inga partners kopplade till användare med ID: " + aid);
        }

    } catch (InfException e) {
        javax.swing.JOptionPane.showMessageDialog(this, "Kunde inte hämta partnerdata: " + e.getMessage());
        e.printStackTrace();
    }
}
    


    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel etikettRubrikLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lPartnerLabel;
    private javax.swing.JTable projektPartnerTabel;
    private javax.swing.JButton stängFönsterButton;
    private javax.swing.JTable tabellProjektTabel;
    // End of variables declaration//GEN-END:variables
}
