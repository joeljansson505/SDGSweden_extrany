/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package inlämningsprojekt_ny;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author svanteskold
 */
public class ProjektchefRedigeraProjekt extends javax.swing.JFrame {
    private InfDB idb;
    private String inloggadAnvandare;
    private int aid;
    private String pid;
    /**
     * Creates new form ProjektchefRedigeraProjekt
     */
    public ProjektchefRedigeraProjekt(InfDB idb, String inloggadAnvandare, int aid, String pid) {
       this.idb = idb;
       this.inloggadAnvandare = inloggadAnvandare;
       this.aid = aid;
       this.pid=pid;
        initComponents();
        fyllProjektInformation();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        projektchefTillbakaButton = new javax.swing.JButton();
        redigeraProjektLabel = new javax.swing.JLabel();
        redigerProjektField = new javax.swing.JTextField();
        satusRedigeraMinaProjektComboBox = new javax.swing.JComboBox<>();
        statusRedigeraProjektLabel = new javax.swing.JLabel();
        startdatumRedigeraProjektLabel = new javax.swing.JLabel();
        startdatumRedigeraProjektField = new javax.swing.JTextField();
        slutdatumRedigeraProjektLabel = new javax.swing.JLabel();
        slutdatumRedigeraProjektField = new javax.swing.JTextField();
        beskrivningRedigeraProjektLabel = new javax.swing.JLabel();
        beskrivningProjektField = new javax.swing.JTextField();
        partnersRedigeraProjektLabel = new javax.swing.JLabel();
        partnerRedigeraLabel = new javax.swing.JTextField();
        handläggareRedigeraProjektLabel = new javax.swing.JLabel();
        handläggareRedigeraField = new javax.swing.JTextField();
        sparaAndringarRedigeraProjektButton = new javax.swing.JButton();
        felmeddelandepcLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        projektchefTillbakaButton.setText("Tillbaka");
        projektchefTillbakaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                projektchefTillbakaButtonActionPerformed(evt);
            }
        });

        redigeraProjektLabel.setText("Projekt Namn:");

        redigerProjektField.setColumns(10);
        redigerProjektField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redigerProjektFieldActionPerformed(evt);
            }
        });

        satusRedigeraMinaProjektComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pågående", "Planerad", "Avslutad" }));
        satusRedigeraMinaProjektComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                satusRedigeraMinaProjektComboBoxActionPerformed(evt);
            }
        });

        statusRedigeraProjektLabel.setText("Status:");

        startdatumRedigeraProjektLabel.setText("Startdatum:");

        startdatumRedigeraProjektField.setColumns(8);
        startdatumRedigeraProjektField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startdatumRedigeraProjektFieldActionPerformed(evt);
            }
        });

        slutdatumRedigeraProjektLabel.setText("Slutdatum:");

        slutdatumRedigeraProjektField.setColumns(8);
        slutdatumRedigeraProjektField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                slutdatumRedigeraProjektFieldActionPerformed(evt);
            }
        });

        beskrivningRedigeraProjektLabel.setText("Projektbeskrivning:");

        beskrivningProjektField.setColumns(20);
        beskrivningProjektField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beskrivningProjektFieldActionPerformed(evt);
            }
        });

        partnersRedigeraProjektLabel.setText("Partners:");

        partnerRedigeraLabel.setColumns(20);
        partnerRedigeraLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                partnerRedigeraLabelActionPerformed(evt);
            }
        });

        handläggareRedigeraProjektLabel.setText("Handläggare:");

        handläggareRedigeraField.setColumns(20);
        handläggareRedigeraField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handläggareRedigeraFieldActionPerformed(evt);
            }
        });

        sparaAndringarRedigeraProjektButton.setText("Spara");
        sparaAndringarRedigeraProjektButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sparaAndringarRedigeraProjektButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(startdatumRedigeraProjektLabel)
                                    .addGap(18, 18, 18)
                                    .addComponent(startdatumRedigeraProjektField, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                                    .addComponent(slutdatumRedigeraProjektLabel)
                                    .addGap(18, 18, 18)
                                    .addComponent(slutdatumRedigeraProjektField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(redigeraProjektLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(statusRedigeraProjektLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(satusRedigeraMinaProjektComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(redigerProjektField, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(beskrivningRedigeraProjektLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(beskrivningProjektField, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(partnerRedigeraLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(felmeddelandepcLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(handläggareRedigeraField, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(projektchefTillbakaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(sparaAndringarRedigeraProjektButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(47, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addComponent(partnersRedigeraProjektLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(handläggareRedigeraProjektLabel)
                .addGap(109, 109, 109))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(redigeraProjektLabel)
                    .addComponent(redigerProjektField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(satusRedigeraMinaProjektComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(statusRedigeraProjektLabel))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(startdatumRedigeraProjektLabel)
                            .addComponent(startdatumRedigeraProjektField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(slutdatumRedigeraProjektLabel)
                            .addComponent(slutdatumRedigeraProjektField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(beskrivningRedigeraProjektLabel)
                            .addComponent(beskrivningProjektField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addComponent(partnersRedigeraProjektLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(partnerRedigeraLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(felmeddelandepcLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(handläggareRedigeraProjektLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(handläggareRedigeraField, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(projektchefTillbakaButton)
                    .addComponent(sparaAndringarRedigeraProjektButton))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fyllProjektInformation() {
    try {
        // Projektdata
        String sql = "SELECT * FROM projekt WHERE pid = " + pid + ";";
        var projektData = idb.fetchRow(sql);

        if (projektData != null) {
            redigerProjektField.setText(projektData.get("projektnamn"));
            startdatumRedigeraProjektField.setText(projektData.get("startdatum"));
            slutdatumRedigeraProjektField.setText(projektData.get("slutdatum"));
            satusRedigeraMinaProjektComboBox.setSelectedItem(projektData.get("status"));
            beskrivningProjektField.setText(projektData.get("beskrivning"));
        }

        // Partner: hämta alla partners för projektet
        String partnerSql = "SELECT namn FROM partner " +
                            "JOIN projekt_partner ON partner.pid = projekt_partner.partner_pid " +
                            "WHERE projekt_partner.pid = " + pid + ";";
        var partnerResultat = idb.fetchColumn(partnerSql);

        if (partnerResultat != null && !partnerResultat.isEmpty()) {
            // Sätt ihop alla namn i en sträng
            String partnerText = String.join(", ", partnerResultat);
            partnerRedigeraLabel.setText(partnerText);
        }

        // Handläggare: hämta alla handläggare kopplade till projektet
        String handlaggareSql = "SELECT fornamn + efternamn " +
                        "FROM anstalld " +
                        "JOIN ans_proj ON anstalld.aid = ans_proj.aid " +
                        "WHERE ans_proj.pid = " + pid + ";";
        var handlaggareResultat = idb.fetchColumn(handlaggareSql);

        if (handlaggareResultat != null && !handlaggareResultat.isEmpty()) {
            String handlaggareText = String.join(", ", handlaggareResultat);
            handläggareRedigeraField.setText(handlaggareText);
        }

    } catch (InfException e) {
        javax.swing.JOptionPane.showMessageDialog(this, "Kunde inte hämta projektinformation: " + e.getMessage());
    }
    }
    
    private void projektchefTillbakaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_projektchefTillbakaButtonActionPerformed
        // TODO add your handling code here:
        new ProjektchefMinaProjekt(idb, inloggadAnvandare, aid, pid).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_projektchefTillbakaButtonActionPerformed

    private void redigerProjektFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redigerProjektFieldActionPerformed
        // TODO add your handling code here:
        String nyttNamn = redigerProjektField.getText().trim();

      if (nyttNamn.isEmpty()) {
        javax.swing.JOptionPane.showMessageDialog(this, "Du måste skriva ett projektnamn.");
    } else {
        
        javax.swing.JOptionPane.showMessageDialog(this, "Projektnamn uppdaterat (tillfälligt): " + nyttNamn);
        
     
    }
    }//GEN-LAST:event_redigerProjektFieldActionPerformed

    private void satusRedigeraMinaProjektComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_satusRedigeraMinaProjektComboBoxActionPerformed
        // TODO add your handling code here:
        String valdStatus = (String) satusRedigeraMinaProjektComboBox.getSelectedItem();

    System.out.println("Vald status: " + valdStatus);
    }//GEN-LAST:event_satusRedigeraMinaProjektComboBoxActionPerformed

    private void startdatumRedigeraProjektFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startdatumRedigeraProjektFieldActionPerformed
        // TODO add your handling code here:
       String nyttStartdatum = startdatumRedigeraProjektField.getText().trim();

    if (!Validering.kollaDatum(nyttStartdatum)) {
        javax.swing.JOptionPane.showMessageDialog(this, "Startdatum måste vara i formatet YYYY-MM-DD.");
        return;
    }

    try {
        String projektnamn = redigerProjektField.getText().trim(); 

        String sql = "UPDATE projekt SET startdatum = '" + nyttStartdatum + "' WHERE projektnamn = '" + projektnamn + "'";
        idb.update(sql);

        javax.swing.JOptionPane.showMessageDialog(this, "Startdatum uppdaterat till: " + nyttStartdatum);
    } catch (Exception e) {
        javax.swing.JOptionPane.showMessageDialog(this, "Fel vid uppdatering: " + e.getMessage());
    }

    }//GEN-LAST:event_startdatumRedigeraProjektFieldActionPerformed

    private void slutdatumRedigeraProjektFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_slutdatumRedigeraProjektFieldActionPerformed
        // TODO add your handling code here:
        String nyttSlutdatum = slutdatumRedigeraProjektField.getText().trim();

    if (!Validering.kollaDatum(nyttSlutdatum)) {
        javax.swing.JOptionPane.showMessageDialog(this, "Slutdatum måste vara i formatet YYYY-MM-DD.");
        return;
    }

    try {
        String projektnamn = redigerProjektField.getText().trim(); 

        String sql = "UPDATE projekt SET slutdatum = '" + nyttSlutdatum + "' WHERE projektnamn = '" + projektnamn + "'";
        idb.update(sql);

        javax.swing.JOptionPane.showMessageDialog(this, "Slutdatum uppdaterat till: " + nyttSlutdatum);
    } catch (Exception e) {
        javax.swing.JOptionPane.showMessageDialog(this, "Fel vid uppdatering: " + e.getMessage());
    }
    }//GEN-LAST:event_slutdatumRedigeraProjektFieldActionPerformed

    private void beskrivningProjektFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beskrivningProjektFieldActionPerformed
        // TODO add your handling code here:
        String nyBeskrivning = beskrivningProjektField.getText().trim();

    if (!Validering.faltInteTomt(nyBeskrivning)) {
        javax.swing.JOptionPane.showMessageDialog(this, "Beskrivningen får inte vara tom.");
        return;
    }

    try {
        String projektnamn = redigerProjektField.getText().trim(); 

        String sql = "UPDATE projekt SET beskrivning = '" + nyBeskrivning + "' WHERE projektnamn = '" + projektnamn + "'";
        idb.update(sql);

        javax.swing.JOptionPane.showMessageDialog(this, "Beskrivning uppdaterad!");
    } catch (Exception e) {
        javax.swing.JOptionPane.showMessageDialog(this, "Fel vid uppdatering: " + e.getMessage());
    }
    }//GEN-LAST:event_beskrivningProjektFieldActionPerformed

    private void partnerRedigeraLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_partnerRedigeraLabelActionPerformed
        // TODO add your handling code here:
    String projektnamn = redigerProjektField.getText().trim();
    String nyPartner = partnerRedigeraLabel.getText().trim();

    // Validera att partnerfältet inte är tomt
    if (!Validering.faltInteTomt(nyPartner)) {
        felmeddelandepcLabel.setText("Partnerfältet får inte vara tomt");
        felmeddelandepcLabel.setVisible(true);
        return;
    }

    try {
        String sql = "UPDATE projekt SET partner = '" + nyPartner + "' WHERE projektnamn = '" + projektnamn + "'";
        idb.update(sql);
        felmeddelandepcLabel.setText("Partner uppdaterad till: " + nyPartner);
        felmeddelandepcLabel.setVisible(true);
    } catch (Exception e) {
        felmeddelandepcLabel.setText("Fel vid uppdatering: " + e.getMessage());
        felmeddelandepcLabel.setVisible(true);
    }
    }//GEN-LAST:event_partnerRedigeraLabelActionPerformed

    private void handläggareRedigeraFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_handläggareRedigeraFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_handläggareRedigeraFieldActionPerformed

    private void sparaAndringarRedigeraProjektButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sparaAndringarRedigeraProjektButtonActionPerformed
        // TODO add your handling code here:
          try {
        // Hämta projektets namn från fältet
        String projektnamn = redigerProjektField.getText().trim();

        // Hämta övriga uppgifter
        String status = satusRedigeraMinaProjektComboBox.getSelectedItem().toString();
        String startdatum = startdatumRedigeraProjektField.getText().trim();
        String slutdatum = slutdatumRedigeraProjektField.getText().trim();
        String beskrivning = beskrivningProjektField.getText().trim();
        String partnerNamn = partnerRedigeraLabel.getText().trim();
        String handlaggare = handläggareRedigeraField.getText().trim();

        // Validera
        if (projektnamn.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Fyll i projektets namn.");
            return;
        }

        // Hämta projektets pid
        String pid = idb.fetchSingle("SELECT pid FROM projekt WHERE projektnamn = '" + projektnamn + "'");

        if (pid == null) {
            javax.swing.JOptionPane.showMessageDialog(this, "Kunde inte hitta projektet.");
            return;
        }

        // Uppdatera själva projektet
        String updateSql = "UPDATE projekt SET " +
                           "status = '" + status + "', " +
                           "startdatum = '" + startdatum + "', " +
                           "slutdatum = '" + slutdatum + "', " +
                           "beskrivning = '" + beskrivning + "' " +
                           "WHERE pid = " + pid;

        idb.update(updateSql);

        // Om partnerNamn är ifyllt: koppla partner till projektet
        if (!partnerNamn.isEmpty()) {
            // Hämta partnerns ID
            String partnerPid = idb.fetchSingle("SELECT partner_pid FROM partner WHERE namn = '" + partnerNamn + "'");

            if (partnerPid != null) {
                // Lägg in kopplingen om den inte redan finns
                String check = idb.fetchSingle("SELECT * FROM projekt_partner WHERE pid = " + pid + " AND partner_pid = " + partnerPid);
                if (check == null) {
                    String kopplaSql = "INSERT INTO projekt_partner (pid, partner_pid) VALUES (" + pid + ", " + partnerPid + ")";
                    idb.insert(kopplaSql);
                }
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "Partnern hittades inte i databasen.");
            }
        }

        // Visa klar
        javax.swing.JOptionPane.showMessageDialog(this, "Projektet uppdaterades!");
    } catch (Exception e) {
        javax.swing.JOptionPane.showMessageDialog(this, "Fel: " + e.getMessage());
    }
          
    }//GEN-LAST:event_sparaAndringarRedigeraProjektButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProjektchefRedigeraProjekt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProjektchefRedigeraProjekt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProjektchefRedigeraProjekt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProjektchefRedigeraProjekt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new ProjektchefRedigeraProjekt().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField beskrivningProjektField;
    private javax.swing.JLabel beskrivningRedigeraProjektLabel;
    private javax.swing.JLabel felmeddelandepcLabel;
    private javax.swing.JTextField handläggareRedigeraField;
    private javax.swing.JLabel handläggareRedigeraProjektLabel;
    private javax.swing.JTextField partnerRedigeraLabel;
    private javax.swing.JLabel partnersRedigeraProjektLabel;
    private javax.swing.JButton projektchefTillbakaButton;
    private javax.swing.JTextField redigerProjektField;
    private javax.swing.JLabel redigeraProjektLabel;
    private javax.swing.JComboBox<String> satusRedigeraMinaProjektComboBox;
    private javax.swing.JTextField slutdatumRedigeraProjektField;
    private javax.swing.JLabel slutdatumRedigeraProjektLabel;
    private javax.swing.JButton sparaAndringarRedigeraProjektButton;
    private javax.swing.JTextField startdatumRedigeraProjektField;
    private javax.swing.JLabel startdatumRedigeraProjektLabel;
    private javax.swing.JLabel statusRedigeraProjektLabel;
    // End of variables declaration//GEN-END:variables
}
