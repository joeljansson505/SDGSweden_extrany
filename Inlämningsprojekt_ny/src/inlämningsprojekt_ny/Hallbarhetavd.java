package inlämningsprojekt_ny;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import inlämningsprojekt_ny.Validering;
import java.awt.event.ActionEvent;
import oru.inf.InfDB;
/**
 *
 * @author joelj
 */
public class Hallbarhetavd extends javax.swing.JFrame {
    
    private InfDB idb;
    private String inloggadAnvandare;
    private int aid;

    /**
     * Creates new form Hallbarhetavd
     */
    public Hallbarhetavd(InfDB idb, String inloggadAnvandare, int aid) {
        this.idb = idb;
        this.inloggadAnvandare = inloggadAnvandare;
        this.aid = aid;
        initComponents();
        jScrollPane1.setVisible(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        HallbarhetavdTillbakaButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        hallbarhetPersonalField = new javax.swing.JTextArea();
        hallbarhetAvdPersonalButton = new javax.swing.JButton();
        hallbarhetAvdProjektButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        hallbarhetAvdProjektField = new javax.swing.JTextArea();
        pAvdHallbarhetButton = new javax.swing.JToggleButton();
        aAvdHallbarhetButton = new javax.swing.JToggleButton();
        plaAvdHallbarhetButton = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        HallbarhetavdTillbakaButton.setText("Tillbaka");
        HallbarhetavdTillbakaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HallbarhetavdTillbakaButtonActionPerformed(evt);
            }
        });

        hallbarhetPersonalField.setColumns(20);
        hallbarhetPersonalField.setRows(5);
        jScrollPane1.setViewportView(hallbarhetPersonalField);

        hallbarhetAvdPersonalButton.setText("Personal Lista");
        hallbarhetAvdPersonalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hallbarhetAvdPersonalButtonActionPerformed(evt);
            }
        });

        hallbarhetAvdProjektButton.setText("Projekt Lista");
        hallbarhetAvdProjektButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hallbarhetAvdProjektButtonActionPerformed(evt);
            }
        });

        hallbarhetAvdProjektField.setColumns(20);
        hallbarhetAvdProjektField.setRows(5);
        jScrollPane2.setViewportView(hallbarhetAvdProjektField);

        buttonGroup1.add(pAvdHallbarhetButton);
        pAvdHallbarhetButton.setText("Pågående");
        pAvdHallbarhetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pAvdHallbarhetButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(aAvdHallbarhetButton);
        aAvdHallbarhetButton.setText("Avslutande");
        aAvdHallbarhetButton.setBorderPainted(false);
        aAvdHallbarhetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aAvdHallbarhetButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(plaAvdHallbarhetButton);
        plaAvdHallbarhetButton.setText("Planerat");
        plaAvdHallbarhetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plaAvdHallbarhetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hallbarhetAvdPersonalButton)
                    .addComponent(HallbarhetavdTillbakaButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(hallbarhetAvdProjektButton)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(plaAvdHallbarhetButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pAvdHallbarhetButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aAvdHallbarhetButton)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HallbarhetavdTillbakaButton)
                    .addComponent(pAvdHallbarhetButton)
                    .addComponent(aAvdHallbarhetButton)
                    .addComponent(plaAvdHallbarhetButton))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hallbarhetAvdPersonalButton)
                    .addComponent(hallbarhetAvdProjektButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HallbarhetavdTillbakaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HallbarhetavdTillbakaButtonActionPerformed
        // TODO add your handling code here:
        new Avdelning(idb, inloggadAnvandare, aid).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_HallbarhetavdTillbakaButtonActionPerformed

    private void hallbarhetAvdPersonalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hallbarhetAvdPersonalButtonActionPerformed
        // TODO add your handling code here:
        try {
    String sql = "SELECT fornamn, efternamn FROM anstalld " + 
                 "JOIN avdelning ON anstalld.avdelning = avdelning.avdid " + 
                 "WHERE avdelning.namn = 'Avdelning för Hållbar Energi och Klimatförändringar'";

    var resultat = idb.fetchRows(sql);

    if (resultat != null && !resultat.isEmpty()) {
        StringBuilder sb = new StringBuilder();
        for (var rad : resultat) {
            sb.append(rad.get("fornamn")).append(" ").append(rad.get("efternamn")).append("\n");
        }
        hallbarhetPersonalField.setText(sb.toString());
        jScrollPane1.setVisible(true);
        jScrollPane1.revalidate();
        jScrollPane1.repaint();
    } else {
        hallbarhetPersonalField.setText("Inga personer hittades.");
        jScrollPane1.setVisible(true);
        jScrollPane1.revalidate();
        jScrollPane1.repaint();
    }
} catch (Exception e) {
    hallbarhetPersonalField.setText("Fel: " + e.getMessage());
    jScrollPane1.setVisible(true);
    jScrollPane1.revalidate();
    jScrollPane1.repaint();
}
        
    }//GEN-LAST:event_hallbarhetAvdPersonalButtonActionPerformed

    private void hallbarhetAvdProjektButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hallbarhetAvdProjektButtonActionPerformed
        // TODO add your handling code here:
        try {
            String sql = "SELECT DISTINCT p.projektnamn FROM projekt p " + 
                    "JOIN proj_hallbarhet ph ON p.pid = ph.pid " + 
                    "JOIN avd_hallbarhet ah ON ph.hid = ah.hid " + 
                    "JOIN avdelning a ON ah.avdid = a.avdid " +
                    "WHERE a.namn = 'Avdelning för Hållbar Energi och Klimatförändringar' ";
            
            var resultat = idb.fetchRows(sql);
            
            if (resultat != null && !resultat.isEmpty()) {
                StringBuilder sb = new StringBuilder();
                for (var rad : resultat) {
                    sb.append(rad.get("projektnamn")).append("\n");
                }
                hallbarhetAvdProjektField.setText(sb.toString());
                jScrollPane2.setVisible(true);
            } else {
                hallbarhetAvdProjektField.setText("Inga projekt hittades.");
                jScrollPane2.setVisible(true);
            }
      } catch (Exception e) {
          hallbarhetAvdProjektField.setText("Fel: " + e.getMessage());
          jScrollPane2.setVisible(true);
      }
    }//GEN-LAST:event_hallbarhetAvdProjektButtonActionPerformed

    private void pAvdHallbarhetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pAvdHallbarhetButtonActionPerformed
        // TODO add your handling code here:
        String status = "Pågående";
        
        if(Validering.kollaStatus(status)){
            try{
                String sql ="SELECT DISTINCT p.projektnamn FROM projekt p " +
                        "JOIN proj_hallbarhet ph ON p.pid = ph.pid " +
                        "JOIN avd_hallbarhet ah ON ph.hid = ah.hid " +
                        "JOIN avdelning a ON ah.avdid = a.avdid " +
                        "WHERE a.namn = 'Avdelning för Hållbar Energi och Klimatförändringar' " +
                        "AND p.status = '" + status + "'";
                
               var resultat = idb.fetchRows(sql);
               StringBuilder sb = new StringBuilder();
               
               if(resultat != null && !resultat.isEmpty()){
                   for(var rad : resultat){
                       sb.append(rad.get("projektnamn")).append("\n");
                   }
                   hallbarhetAvdProjektField.setText(sb.toString());
               }else{
                   hallbarhetAvdProjektField.setText("Inga projekt med status '" + status + "'hittades.");
               }
            }catch (Exception e){
                hallbarhetAvdProjektField.setText("Fel: " + e.getMessage());
            }
        }else{
            hallbarhetAvdProjektField.setText("Ogiltig status:" + status);
        }
    }//GEN-LAST:event_pAvdHallbarhetButtonActionPerformed

    private void aAvdHallbarhetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aAvdHallbarhetButtonActionPerformed
        // TODO add your handling code here:
        String status = "Avslutat";
        
        if(Validering.kollaStatus(status)){
            try{
                String sql = "SELECT DISTINCT p.projektnamn FROM projekt p " +
                        "JOIN proj_hallbarhet ph ON p.pid = ph.pid " +
                        "JOIN avd_hallbarhet ah ON ph.hid = ah.hid " +
                        "JOIN avdelning a ON ah.avdid = a.avdid " +
                        "WHERE a.namn = 'Avdelning för Hållbar Energi och Klimatförändringar' "+
                        "AND p.status = '" + status + "'";
                
               var resultat = idb.fetchRows(sql);
               StringBuilder sb = new StringBuilder();
               
               if(resultat != null && !resultat.isEmpty()){
                   for(var rad : resultat){
                       sb.append(rad.get("projektnamn")).append("\n");
                   }
                   hallbarhetAvdProjektField.setText(sb.toString());
               }else{
                   hallbarhetAvdProjektField.setText("Inga projekt med status '" + status + "'hittades.");
               }
            }catch (Exception e){
                hallbarhetAvdProjektField.setText("Fel: " + e.getMessage());
            }
        }else {
            hallbarhetAvdProjektField.setText("Ogiltig status: " + status);
        }
    }//GEN-LAST:event_aAvdHallbarhetButtonActionPerformed

    private void plaAvdHallbarhetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plaAvdHallbarhetButtonActionPerformed
        // TODO add your handling code here:
                String status = "Planerat";
        
        if(Validering.kollaStatus(status)){
            try{
                String sql = "SELECT DISTINCT p.projektnamn FROM projekt p " +
                        "JOIN proj_hallbarhet ph ON p.pid = ph.pid " +
                        "JOIN avd_hallbarhet ah ON ph.hid = ah.hid " +
                        "JOIN avdelning a ON ah.avdid = a.avdid " +
                        "WHERE a.namn = 'Avdelning för Hållbar Energi och Klimatförändringar' "+
                        "AND p.status = '" + status + "'";
                
               var resultat = idb.fetchRows(sql);
               StringBuilder sb = new StringBuilder();
               
               if(resultat != null && !resultat.isEmpty()){
                   for(var rad : resultat){
                       sb.append(rad.get("projektnamn")).append("\n");
                   }
                   hallbarhetAvdProjektField.setText(sb.toString());
               }else{
                   hallbarhetAvdProjektField.setText("Inga projekt med status '" + status + "' hittades.");
               }
            }catch (Exception e){
                hallbarhetAvdProjektField.setText("Fel: " + e.getMessage());
            }
        }else {
            hallbarhetAvdProjektField.setText("Ogiltig status: " + status);
        }
    }//GEN-LAST:event_plaAvdHallbarhetButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Hallbarhetavd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Hallbarhetavd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Hallbarhetavd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Hallbarhetavd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new Hallbarhetavd().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton HallbarhetavdTillbakaButton;
    private javax.swing.JToggleButton aAvdHallbarhetButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton hallbarhetAvdPersonalButton;
    private javax.swing.JButton hallbarhetAvdProjektButton;
    private javax.swing.JTextArea hallbarhetAvdProjektField;
    private javax.swing.JTextArea hallbarhetPersonalField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToggleButton pAvdHallbarhetButton;
    private javax.swing.JToggleButton plaAvdHallbarhetButton;
    // End of variables declaration//GEN-END:variables
}
